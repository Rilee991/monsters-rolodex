{"version":3,"sources":["components/card/card-component.js","components/card-list-component.js","components/search-box/search-box-component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","id","email","className","alt","src","CardList","monsters","map","monster","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAgBeA,EAZF,SAACC,GACV,IAAQC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,GAAIC,EAAUH,EAAVG,MAElB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BJ,EAA1B,4BACtB,6BAAKD,IACL,4BAAIE,QCQDI,EAdE,SAACP,GACd,IAAQQ,EAAaR,EAAbQ,SAER,OACI,qBAAKJ,UAAU,YAAf,SAEQI,EAASC,KAAI,SAACC,GACV,OAAQ,cAAC,EAAD,CAAuBR,GAAIQ,EAAQR,GAAID,KAAMS,EAAQT,KAAME,MAAOO,EAAQP,OAA/DO,EAAQR,UCGhCS,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC9B,OACI,uBACIT,UAAU,SACVU,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC+BPG,E,kDAlCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEhB,SAAUe,S,oBAG3C,WAAW,IAAD,OACR,EAAkCE,KAAKR,MAA/BT,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZQ,EAAmBlB,EAASmB,QAAO,SAAAjB,GAAO,OAC9CA,EAAQT,KAAK2B,cAAcC,SAASX,EAAYU,kBAGlD,OACE,sBAAKxB,UAAU,MAAf,UACE,wEACA,cAAC,EAAD,CACEQ,YAAY,iBACZC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE3D,cAAC,EAAD,CAAUxB,SAAUkB,W,GA7BVO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f5a11ed3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card-style.css';\r\n\r\nconst Card = (props) => {\r\n    const { name, id, email } = props;\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${id}?set=set2&size=180x180`} />\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './card-list-style.css';\r\nimport Card from './card/card-component';\r\n\r\nconst CardList = (props) => {\r\n    const { monsters } = props;\r\n\r\n    return (\r\n        <div className=\"card-list\">\r\n            {\r\n                monsters.map((monster) => {\r\n                    return (<Card key={monster.id} id={monster.id} name={monster.name} email={monster.email}/>);\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nimport './search-box-style.css';\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => {\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            type=\"search\"\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import { Component } from 'react';\n\nimport './App.css';\nimport CardList from './components/card-list-component';\nimport SearchBox from './components/search-box/search-box-component';\n\nclass App extends Component {\n  constructor() {\n    super(); //calls the contructor method on the component class.\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users }));\n  }\n\n  render () {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => (\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    ));\n\n    return (\n      <div className=\"App\">\n        <h1>Harry Potter and The Half Blood Prince</h1>\n        <SearchBox \n          placeholder=\"search monster\"\n          handleChange={e => this.setState({ searchField: e.target.value })}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}